#
# Docker-compose file for running experiments
#
#command to run:
# cd CIMNAS; export DOCKER_ARCH=amd64; docker-compose pull; docker-compose up
#
#
# Notes: 
#    The READMEs are put in ./workspace
#    The workspace will be owned by $USER_UID:$USER_GID
# 
#this helps with proper installation: 
# https://medium.com/@jared.ratner2/setting-up-docker-and-docker-compose-with-nvidia-gpu-support-on-linux-716db95c0f7c
# 
#After reinstalling the cuda drivers, cuda toolkit and container toolkit, I was still getting the error. 
#Issue got resolved by just reinstalling docker-ce using: 
# sudo apt-get install --reinstall docker-ce
# NEW REINSTALLATION COMMANS TO KEEP MY VERSION (this wroks):
# sudo apt-get install --reinstall docker-ce=5:27.5.1-1~ubuntu.20.04~focal 
# sudo apt-mark hold docker-ce
#
#
#
#uninstall docker:
#https://docs.docker.com/engine/install/ubuntu/
#https://docs.docker.com/engine/install/ubuntu/#uninstall-docker-engine
#hold from updates:
# sudo apt-mark hold containerd.io docker-ce-rootless-extras docker-buildx-plugin docker-compose-plugin docker-ce docker-ce-cli
# sudo apt-mark hold docker docker-ce docker-ce-cli containerd.io docker-compose-plugin
# I also remove unattanded upgrades:
# sudo nano /etc/apt/apt.conf.d/50unattended-upgrades
# Unattended-Upgrade::Package-Blacklist {
#  "docker"
#  "docker-ce";
#  "docker-ce-cli";
#  "containerd.io";
#  "docker-compose-plugin";
#  "docker-ce-rootless-extras";
#  "docker-buildx-plugin";

# Run as follows:
#
#    1) Cd to the directory containing this file
#    2) Change USER_UID and USER_GID to the desired owner of your files (echo $UID in Docker Quick Start Terminal)
#    3) Run the following command:
#
#        % If you are using x86 CPU (Intel, AMD)
#        % DOCKER_ARCH=amd64 docker-compose up
#
#        % If you are using arm CPU (Apple M1/M2)
#        % DOCKER_ARCH=arm64 docker-compose up 
#
#        % If you want to avoid typing "DOCKER_ARCH=" every time,
#        % "export DOCKER_ARCH=<your architecture>" >> ~/.bashrc && source ~/.bashrc
#
#    4) Look at output and use the 127.0.0.1 URL (unless you changed the port below)
#

# Notes (if URL does not work)
# Option1: uncomment the last line under `environment` to disable token and try again
# Option2: try the 192.168.X.X with the same token as shown in the output (X.X can be obtained by `hostname -I`)
# Option3: if you have access to docker GUI app (e.g., Kitematic for docker temrinal), try open the web page there with the token

#

version: '3'

services:
  tutorial:
    hostname: tutorial
    image: timeloopaccelergy/timeloop-accelergy-pytorch:latest-amd64
    deploy:
      resources:
        reservations:
          devices:
          - driver: nvidia
            count: all  # Or specify a number, like 1
            capabilities: [gpu]
    ports:
      - "8888:8888"
    volumes:
      - ./workspace:/home/workspace
    environment:
      - USER_UID=151466
      - USER_GID=151466
      - JUPYTER_SWITCHES=--NotebookApp.token=''
      - NVIDIA_VISIBLE_DEVICES=all  # Or specify device IDs, e.g., "0,1"
